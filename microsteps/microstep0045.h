
    #ifndef FPSD_MICROSTEPS_H_
    #define FPSD_MICROSTEPS_H_
/*
 * microstep45.h
 *
 *  Created on: 2021-03-30 00:32:00.389504
 *      Author: Benedikt Seeger
 *
 * This file was generated by microstep_gernerato.py. And contains the Shiftregsiter and DAC control words for a motor with 5 phases.
 * NUMBER OF MICROSTEPS=45
 */
 #define NUMBERMICROSTEPS 45
static const uint8_t DACData[5*45] = { 0xff, 0x4e, 0xce, 0xce, 0x4e, //This row holds 0. Step DACword 0,1,2,3,4,5 word for channel 0 is acced by DACData[0]
				0xfc, 0x2c, 0xe1, 0xb7, 0x6f, 
				0xf5, 0x8, 0xef, 0x9c, 0x8e, 
				0xe8, 0x1a, 0xf9, 0x7f, 0xaa, 
				0xd8, 0x3d, 0xfe, 0x5f, 0xc3, 
				0xc3, 0x5f, 0xfe, 0x3d, 0xd8, 
				0xaa, 0x7f, 0xf9, 0x1a, 0xe8, 
				0x8e, 0x9c, 0xef, 0x8, 0xf5, 
				0x6f, 0xb7, 0xe1, 0x2c, 0xfc, 
				0x4e, 0xce, 0xce, 0x4e, 0xff, 
				0x2c, 0xe1, 0xb7, 0x6f, 0xfc, //This row holds 10. Step DACword 0,1,2,3,4,5 word for channel 0 is acced by DACData[50]
				0x8, 0xef, 0x9c, 0x8e, 0xf5, 
				0x1a, 0xf9, 0x7f, 0xaa, 0xe8, 
				0x3d, 0xfe, 0x5f, 0xc3, 0xd8, 
				0x5f, 0xfe, 0x3d, 0xd8, 0xc3, 
				0x7f, 0xf9, 0x1a, 0xe8, 0xaa, 
				0x9c, 0xef, 0x8, 0xf5, 0x8e, 
				0xb7, 0xe1, 0x2c, 0xfc, 0x6f, 
				0xce, 0xce, 0x4e, 0xff, 0x4e, 
				0xe1, 0xb7, 0x6f, 0xfc, 0x2c, 
				0xef, 0x9c, 0x8e, 0xf5, 0x8, //This row holds 20. Step DACword 0,1,2,3,4,5 word for channel 0 is acced by DACData[100]
				0xf9, 0x7f, 0xaa, 0xe8, 0x1a, 
				0xfe, 0x5f, 0xc3, 0xd8, 0x3d, 
				0xfe, 0x3d, 0xd8, 0xc3, 0x5f, 
				0xf9, 0x1a, 0xe8, 0xaa, 0x7f, 
				0xef, 0x8, 0xf5, 0x8e, 0x9c, 
				0xe1, 0x2c, 0xfc, 0x6f, 0xb7, 
				0xce, 0x4e, 0xff, 0x4e, 0xce, 
				0xb7, 0x6f, 0xfc, 0x2c, 0xe1, 
				0x9c, 0x8e, 0xf5, 0x8, 0xef, 
				0x7f, 0xaa, 0xe8, 0x1a, 0xf9, //This row holds 30. Step DACword 0,1,2,3,4,5 word for channel 0 is acced by DACData[150]
				0x5f, 0xc3, 0xd8, 0x3d, 0xfe, 
				0x3d, 0xd8, 0xc3, 0x5f, 0xfe, 
				0x1a, 0xe8, 0xaa, 0x7f, 0xf9, 
				0x8, 0xf5, 0x8e, 0x9c, 0xef, 
				0x2c, 0xfc, 0x6f, 0xb7, 0xe1, 
				0x4e, 0xff, 0x4e, 0xce, 0xce, 
				0x6f, 0xfc, 0x2c, 0xe1, 0xb7, 
				0x8e, 0xf5, 0x8, 0xef, 0x9c, 
				0xaa, 0xe8, 0x1a, 0xf9, 0x7f, 
				0xc3, 0xd8, 0x3d, 0xfe, 0x5f, //This row holds 40. Step DACword 0,1,2,3,4,5 word for channel 0 is acced by DACData[200]
				0xd8, 0xc3, 0x5f, 0xfe, 0x3d, 
				0xe8, 0xaa, 0x7f, 0xf9, 0x1a, 
				0xf5, 0x8e, 0x9c, 0xef, 0x8, 
				0xfc, 0x6f, 0xb7, 0xe1, 0x2c, 
				};

static const uint8_t BridgeWords[3*45] = { 0x0,0xdc,0xde,//This row holds 0. Step BridgeControalWord 0,1,2 first sihftOutWord is acced by BridgeWords[0]
				0x0,0xdc,0xde,
				0x0,0xdc,0xde,
				0x0,0xdc,0xd6,
				0x0,0xdc,0xd6,
				0x0,0xdc,0xd6,
				0x0,0xdc,0xd6,
				0x0,0xec,0xd6,
				0x0,0xec,0xd6,
				0x0,0xec,0xd6,
				0x0,0xec,0xd6,//This row holds 10. Step BridgeControalWord 0,1,2 first sihftOutWord is acced by BridgeWords[30]
				0x0,0xec,0xd6,
				0x0,0xec,0xb6,
				0x0,0xec,0xb6,
				0x0,0xec,0xb6,
				0x0,0xec,0xb6,
				0x0,0xec,0xb7,
				0x0,0xec,0xb7,
				0x0,0xec,0xb7,
				0x0,0xec,0xb7,
				0x0,0xec,0xb7,//This row holds 20. Step BridgeControalWord 0,1,2 first sihftOutWord is acced by BridgeWords[60]
				0x0,0xea,0xb7,
				0x0,0xea,0xb7,
				0x0,0xea,0xb7,
				0x0,0xea,0xb7,
				0x0,0xea,0xbf,
				0x0,0xea,0xbf,
				0x0,0xea,0xbf,
				0x0,0xea,0xbf,
				0x0,0xea,0xbf,
				0x0,0xda,0xbf,//This row holds 30. Step BridgeControalWord 0,1,2 first sihftOutWord is acced by BridgeWords[90]
				0x0,0xda,0xbf,
				0x0,0xda,0xbf,
				0x0,0xda,0xbf,
				0x0,0xda,0xdf,
				0x0,0xda,0xdf,
				0x0,0xda,0xdf,
				0x0,0xda,0xdf,
				0x0,0xda,0xdf,
				0x0,0xda,0xde,
				0x0,0xda,0xde,//This row holds 40. Step BridgeControalWord 0,1,2 first sihftOutWord is acced by BridgeWords[120]
				0x0,0xda,0xde,
				0x0,0xda,0xde,
				0x0,0xdc,0xde,
				0x0,0xdc,0xde,
				};

#endif /* FPSD_MICROSTEPS_H_ */