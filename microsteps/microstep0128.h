
    #ifndef FPSD_MICROSTEPS_H_
    #define FPSD_MICROSTEPS_H_
/*
 * microstep128.h
 *
 *  Created on: 2021-03-30 00:32:07.965096
 *      Author: Benedikt Seeger
 *
 * This file was generated by microstep_gernerato.py. And contains the Shiftregsiter and DAC control words for a motor with 5 phases.
 * NUMBER OF MICROSTEPS=128
 */
 #define NUMBERMICROSTEPS 128
static const uint8_t DACData[5*128] = { 0xff, 0x4e, 0xce, 0xce, 0x4e, //This row holds 0. Step DACword 0,1,2,3,4,5 word for channel 0 is acced by DACData[0]
				0xfe, 0x42, 0xd5, 0xc6, 0x5a, 
				0xfd, 0x36, 0xdb, 0xbe, 0x66, 
				0xfc, 0x2a, 0xe2, 0xb6, 0x71, 
				0xfa, 0x1d, 0xe7, 0xad, 0x7c, 
				0xf7, 0x11, 0xec, 0xa3, 0x87, 
				0xf4, 0x5, 0xf0, 0x99, 0x91, 
				0xf0, 0x7, 0xf4, 0x8f, 0x9b, 
				0xeb, 0x14, 0xf7, 0x85, 0xa5, 
				0xe6, 0x20, 0xfa, 0x7a, 0xae, 
				0xe0, 0x2c, 0xfc, 0x6f, 0xb7, //This row holds 10. Step DACword 0,1,2,3,4,5 word for channel 0 is acced by DACData[50]
				0xda, 0x39, 0xfe, 0x63, 0xc0, 
				0xd4, 0x45, 0xfe, 0x58, 0xc8, 
				0xcc, 0x51, 0xfe, 0x4c, 0xcf, 
				0xc5, 0x5c, 0xfe, 0x40, 0xd6, 
				0xbc, 0x68, 0xfd, 0x34, 0xdd, 
				0xb4, 0x73, 0xfb, 0x27, 0xe3, 
				0xab, 0x7e, 0xf9, 0x1b, 0xe8, 
				0xa1, 0x89, 0xf6, 0xf, 0xed, 
				0x97, 0x93, 0xf3, 0x2, 0xf1, 
				0x8d, 0x9d, 0xef, 0xa, 0xf5, //This row holds 20. Step DACword 0,1,2,3,4,5 word for channel 0 is acced by DACData[100]
				0x83, 0xa7, 0xea, 0x16, 0xf8, 
				0x78, 0xb0, 0xe5, 0x22, 0xfb, 
				0x6d, 0xb9, 0xdf, 0x2f, 0xfc, 
				0x61, 0xc1, 0xd9, 0x3b, 0xfe, 
				0x55, 0xc9, 0xd2, 0x47, 0xfe, 
				0x4a, 0xd1, 0xcb, 0x53, 0xfe, 
				0x3d, 0xd8, 0xc3, 0x5f, 0xfe, 
				0x31, 0xde, 0xbb, 0x6a, 0xfd, 
				0x25, 0xe4, 0xb2, 0x75, 0xfb, 
				0x18, 0xe9, 0xa9, 0x80, 0xf9, //This row holds 30. Step DACword 0,1,2,3,4,5 word for channel 0 is acced by DACData[150]
				0xc, 0xee, 0x9f, 0x8b, 0xf6, 
				0x0, 0xf2, 0x95, 0x95, 0xf2, 
				0xc, 0xf6, 0x8b, 0x9f, 0xee, 
				0x18, 0xf9, 0x80, 0xa9, 0xe9, 
				0x25, 0xfb, 0x75, 0xb2, 0xe4, 
				0x31, 0xfd, 0x6a, 0xbb, 0xde, 
				0x3d, 0xfe, 0x5f, 0xc3, 0xd8, 
				0x4a, 0xfe, 0x53, 0xcb, 0xd1, 
				0x55, 0xfe, 0x47, 0xd2, 0xc9, 
				0x61, 0xfe, 0x3b, 0xd9, 0xc1, //This row holds 40. Step DACword 0,1,2,3,4,5 word for channel 0 is acced by DACData[200]
				0x6d, 0xfc, 0x2f, 0xdf, 0xb9, 
				0x78, 0xfb, 0x22, 0xe5, 0xb0, 
				0x83, 0xf8, 0x16, 0xea, 0xa7, 
				0x8d, 0xf5, 0xa, 0xef, 0x9d, 
				0x97, 0xf1, 0x2, 0xf3, 0x93, 
				0xa1, 0xed, 0xf, 0xf6, 0x89, 
				0xab, 0xe8, 0x1b, 0xf9, 0x7e, 
				0xb4, 0xe3, 0x27, 0xfb, 0x73, 
				0xbc, 0xdd, 0x34, 0xfd, 0x68, 
				0xc5, 0xd6, 0x40, 0xfe, 0x5c, //This row holds 50. Step DACword 0,1,2,3,4,5 word for channel 0 is acced by DACData[250]
				0xcc, 0xcf, 0x4c, 0xfe, 0x51, 
				0xd4, 0xc8, 0x58, 0xfe, 0x45, 
				0xda, 0xc0, 0x63, 0xfe, 0x39, 
				0xe0, 0xb7, 0x6f, 0xfc, 0x2c, 
				0xe6, 0xae, 0x7a, 0xfa, 0x20, 
				0xeb, 0xa5, 0x85, 0xf7, 0x14, 
				0xf0, 0x9b, 0x8f, 0xf4, 0x7, 
				0xf4, 0x91, 0x99, 0xf0, 0x5, 
				0xf7, 0x87, 0xa3, 0xec, 0x11, 
				0xfa, 0x7c, 0xad, 0xe7, 0x1d, //This row holds 60. Step DACword 0,1,2,3,4,5 word for channel 0 is acced by DACData[300]
				0xfc, 0x71, 0xb6, 0xe2, 0x2a, 
				0xfd, 0x66, 0xbe, 0xdb, 0x36, 
				0xfe, 0x5a, 0xc6, 0xd5, 0x42, 
				0xff, 0x4e, 0xce, 0xce, 0x4e, 
				0xfe, 0x42, 0xd5, 0xc6, 0x5a, 
				0xfd, 0x36, 0xdb, 0xbe, 0x66, 
				0xfc, 0x2a, 0xe2, 0xb6, 0x71, 
				0xfa, 0x1d, 0xe7, 0xad, 0x7c, 
				0xf7, 0x11, 0xec, 0xa3, 0x87, 
				0xf4, 0x5, 0xf0, 0x99, 0x91, //This row holds 70. Step DACword 0,1,2,3,4,5 word for channel 0 is acced by DACData[350]
				0xf0, 0x7, 0xf4, 0x8f, 0x9b, 
				0xeb, 0x14, 0xf7, 0x85, 0xa5, 
				0xe6, 0x20, 0xfa, 0x7a, 0xae, 
				0xe0, 0x2c, 0xfc, 0x6f, 0xb7, 
				0xda, 0x39, 0xfe, 0x63, 0xc0, 
				0xd4, 0x45, 0xfe, 0x58, 0xc8, 
				0xcc, 0x51, 0xfe, 0x4c, 0xcf, 
				0xc5, 0x5c, 0xfe, 0x40, 0xd6, 
				0xbc, 0x68, 0xfd, 0x34, 0xdd, 
				0xb4, 0x73, 0xfb, 0x27, 0xe3, //This row holds 80. Step DACword 0,1,2,3,4,5 word for channel 0 is acced by DACData[400]
				0xab, 0x7e, 0xf9, 0x1b, 0xe8, 
				0xa1, 0x89, 0xf6, 0xf, 0xed, 
				0x97, 0x93, 0xf3, 0x2, 0xf1, 
				0x8d, 0x9d, 0xef, 0xa, 0xf5, 
				0x83, 0xa7, 0xea, 0x16, 0xf8, 
				0x78, 0xb0, 0xe5, 0x22, 0xfb, 
				0x6d, 0xb9, 0xdf, 0x2f, 0xfc, 
				0x61, 0xc1, 0xd9, 0x3b, 0xfe, 
				0x55, 0xc9, 0xd2, 0x47, 0xfe, 
				0x4a, 0xd1, 0xcb, 0x53, 0xfe, //This row holds 90. Step DACword 0,1,2,3,4,5 word for channel 0 is acced by DACData[450]
				0x3d, 0xd8, 0xc3, 0x5f, 0xfe, 
				0x31, 0xde, 0xbb, 0x6a, 0xfd, 
				0x25, 0xe4, 0xb2, 0x75, 0xfb, 
				0x18, 0xe9, 0xa9, 0x80, 0xf9, 
				0xc, 0xee, 0x9f, 0x8b, 0xf6, 
				0x0, 0xf2, 0x95, 0x95, 0xf2, 
				0xc, 0xf6, 0x8b, 0x9f, 0xee, 
				0x18, 0xf9, 0x80, 0xa9, 0xe9, 
				0x25, 0xfb, 0x75, 0xb2, 0xe4, 
				0x31, 0xfd, 0x6a, 0xbb, 0xde, //This row holds 100. Step DACword 0,1,2,3,4,5 word for channel 0 is acced by DACData[500]
				0x3d, 0xfe, 0x5f, 0xc3, 0xd8, 
				0x4a, 0xfe, 0x53, 0xcb, 0xd1, 
				0x55, 0xfe, 0x47, 0xd2, 0xc9, 
				0x61, 0xfe, 0x3b, 0xd9, 0xc1, 
				0x6d, 0xfc, 0x2f, 0xdf, 0xb9, 
				0x78, 0xfb, 0x22, 0xe5, 0xb0, 
				0x83, 0xf8, 0x16, 0xea, 0xa7, 
				0x8d, 0xf5, 0xa, 0xef, 0x9d, 
				0x97, 0xf1, 0x2, 0xf3, 0x93, 
				0xa1, 0xed, 0xf, 0xf6, 0x89, //This row holds 110. Step DACword 0,1,2,3,4,5 word for channel 0 is acced by DACData[550]
				0xab, 0xe8, 0x1b, 0xf9, 0x7e, 
				0xb4, 0xe3, 0x27, 0xfb, 0x73, 
				0xbc, 0xdd, 0x34, 0xfd, 0x68, 
				0xc5, 0xd6, 0x40, 0xfe, 0x5c, 
				0xcc, 0xcf, 0x4c, 0xfe, 0x51, 
				0xd4, 0xc8, 0x58, 0xfe, 0x45, 
				0xda, 0xc0, 0x63, 0xfe, 0x39, 
				0xe0, 0xb7, 0x6f, 0xfc, 0x2c, 
				0xe6, 0xae, 0x7a, 0xfa, 0x20, 
				0xeb, 0xa5, 0x85, 0xf7, 0x14, //This row holds 120. Step DACword 0,1,2,3,4,5 word for channel 0 is acced by DACData[600]
				0xf0, 0x9b, 0x8f, 0xf4, 0x7, 
				0xf4, 0x91, 0x99, 0xf0, 0x5, 
				0xf7, 0x87, 0xa3, 0xec, 0x11, 
				0xfa, 0x7c, 0xad, 0xe7, 0x1d, 
				0xfc, 0x71, 0xb6, 0xe2, 0x2a, 
				0xfd, 0x66, 0xbe, 0xdb, 0x36, 
				0xfe, 0x5a, 0xc6, 0xd5, 0x42, 
				};

static const uint8_t BridgeWords[3*128] = { 0x0,0xdc,0xde,//This row holds 0. Step BridgeControalWord 0,1,2 first sihftOutWord is acced by BridgeWords[0]
				0x0,0xdc,0xde,
				0x0,0xdc,0xde,
				0x0,0xdc,0xde,
				0x0,0xdc,0xde,
				0x0,0xdc,0xde,
				0x0,0xdc,0xde,
				0x0,0xdc,0xd6,
				0x0,0xdc,0xd6,
				0x0,0xdc,0xd6,
				0x0,0xdc,0xd6,//This row holds 10. Step BridgeControalWord 0,1,2 first sihftOutWord is acced by BridgeWords[30]
				0x0,0xdc,0xd6,
				0x0,0xdc,0xd6,
				0x0,0xdc,0xd6,
				0x0,0xdc,0xd6,
				0x0,0xdc,0xd6,
				0x0,0xdc,0xd6,
				0x0,0xdc,0xd6,
				0x0,0xdc,0xd6,
				0x0,0xdc,0xd6,
				0x0,0xec,0xd6,//This row holds 20. Step BridgeControalWord 0,1,2 first sihftOutWord is acced by BridgeWords[60]
				0x0,0xec,0xd6,
				0x0,0xec,0xd6,
				0x0,0xec,0xd6,
				0x0,0xec,0xd6,
				0x0,0xec,0xd6,
				0x0,0xec,0xd6,
				0x0,0xec,0xd6,
				0x0,0xec,0xd6,
				0x0,0xec,0xd6,
				0x0,0xec,0xd6,//This row holds 30. Step BridgeControalWord 0,1,2 first sihftOutWord is acced by BridgeWords[90]
				0x0,0xec,0xd6,
				0x0,0xec,0xd6,
				0x0,0xec,0xb6,
				0x0,0xec,0xb6,
				0x0,0xec,0xb6,
				0x0,0xec,0xb6,
				0x0,0xec,0xb6,
				0x0,0xec,0xb6,
				0x0,0xec,0xb6,
				0x0,0xec,0xb6,//This row holds 40. Step BridgeControalWord 0,1,2 first sihftOutWord is acced by BridgeWords[120]
				0x0,0xec,0xb6,
				0x0,0xec,0xb6,
				0x0,0xec,0xb6,
				0x0,0xec,0xb6,
				0x0,0xec,0xb7,
				0x0,0xec,0xb7,
				0x0,0xec,0xb7,
				0x0,0xec,0xb7,
				0x0,0xec,0xb7,
				0x0,0xec,0xb7,//This row holds 50. Step BridgeControalWord 0,1,2 first sihftOutWord is acced by BridgeWords[150]
				0x0,0xec,0xb7,
				0x0,0xec,0xb7,
				0x0,0xec,0xb7,
				0x0,0xec,0xb7,
				0x0,0xec,0xb7,
				0x0,0xec,0xb7,
				0x0,0xec,0xb7,
				0x0,0xea,0xb7,
				0x0,0xea,0xb7,
				0x0,0xea,0xb7,//This row holds 60. Step BridgeControalWord 0,1,2 first sihftOutWord is acced by BridgeWords[180]
				0x0,0xea,0xb7,
				0x0,0xea,0xb7,
				0x0,0xea,0xb7,
				0x0,0xea,0xb7,
				0x0,0xea,0xb7,
				0x0,0xea,0xb7,
				0x0,0xea,0xb7,
				0x0,0xea,0xb7,
				0x0,0xea,0xb7,
				0x0,0xea,0xb7,//This row holds 70. Step BridgeControalWord 0,1,2 first sihftOutWord is acced by BridgeWords[210]
				0x0,0xea,0xbf,
				0x0,0xea,0xbf,
				0x0,0xea,0xbf,
				0x0,0xea,0xbf,
				0x0,0xea,0xbf,
				0x0,0xea,0xbf,
				0x0,0xea,0xbf,
				0x0,0xea,0xbf,
				0x0,0xea,0xbf,
				0x0,0xea,0xbf,//This row holds 80. Step BridgeControalWord 0,1,2 first sihftOutWord is acced by BridgeWords[240]
				0x0,0xea,0xbf,
				0x0,0xea,0xbf,
				0x0,0xea,0xbf,
				0x0,0xda,0xbf,
				0x0,0xda,0xbf,
				0x0,0xda,0xbf,
				0x0,0xda,0xbf,
				0x0,0xda,0xbf,
				0x0,0xda,0xbf,
				0x0,0xda,0xbf,//This row holds 90. Step BridgeControalWord 0,1,2 first sihftOutWord is acced by BridgeWords[270]
				0x0,0xda,0xbf,
				0x0,0xda,0xbf,
				0x0,0xda,0xbf,
				0x0,0xda,0xbf,
				0x0,0xda,0xbf,
				0x0,0xda,0xbf,
				0x0,0xda,0xdf,
				0x0,0xda,0xdf,
				0x0,0xda,0xdf,
				0x0,0xda,0xdf,//This row holds 100. Step BridgeControalWord 0,1,2 first sihftOutWord is acced by BridgeWords[300]
				0x0,0xda,0xdf,
				0x0,0xda,0xdf,
				0x0,0xda,0xdf,
				0x0,0xda,0xdf,
				0x0,0xda,0xdf,
				0x0,0xda,0xdf,
				0x0,0xda,0xdf,
				0x0,0xda,0xdf,
				0x0,0xda,0xde,
				0x0,0xda,0xde,//This row holds 110. Step BridgeControalWord 0,1,2 first sihftOutWord is acced by BridgeWords[330]
				0x0,0xda,0xde,
				0x0,0xda,0xde,
				0x0,0xda,0xde,
				0x0,0xda,0xde,
				0x0,0xda,0xde,
				0x0,0xda,0xde,
				0x0,0xda,0xde,
				0x0,0xda,0xde,
				0x0,0xda,0xde,
				0x0,0xda,0xde,//This row holds 120. Step BridgeControalWord 0,1,2 first sihftOutWord is acced by BridgeWords[360]
				0x0,0xda,0xde,
				0x0,0xdc,0xde,
				0x0,0xdc,0xde,
				0x0,0xdc,0xde,
				0x0,0xdc,0xde,
				0x0,0xdc,0xde,
				0x0,0xdc,0xde,
				};

#endif /* FPSD_MICROSTEPS_H_ */