
    #ifndef FPSD_MICROSTEPS_H_
    #define FPSD_MICROSTEPS_H_
/*
 * microstep72.h
 *
 *  Created on: 2021-03-30 00:32:04.680410
 *      Author: Benedikt Seeger
 *
 * This file was generated by microstep_gernerato.py. And contains the Shiftregsiter and DAC control words for a motor with 5 phases.
 * NUMBER OF MICROSTEPS=72
 */
 #define NUMBERMICROSTEPS 72
static const uint8_t DACData[5*72] = { 0xff, 0x4e, 0xce, 0xce, 0x4e, //This row holds 0. Step DACword 0,1,2,3,4,5 word for channel 0 is acced by DACData[0]
				0xfe, 0x39, 0xda, 0xc0, 0x63, 
				0xfb, 0x23, 0xe5, 0xb1, 0x77, 
				0xf6, 0xd, 0xee, 0xa0, 0x8a, 
				0xef, 0x8, 0xf5, 0x8e, 0x9c, 
				0xe7, 0x1f, 0xfa, 0x7b, 0xad, 
				0xdc, 0x35, 0xfd, 0x67, 0xbd, 
				0xd0, 0x4a, 0xfe, 0x53, 0xcb, 
				0xc3, 0x5f, 0xfe, 0x3d, 0xd8, 
				0xb4, 0x73, 0xfb, 0x27, 0xe3, 
				0xa3, 0x87, 0xf7, 0x11, 0xec, //This row holds 10. Step DACword 0,1,2,3,4,5 word for channel 0 is acced by DACData[50]
				0x92, 0x99, 0xf1, 0x4, 0xf3, 
				0x7f, 0xaa, 0xe8, 0x1a, 0xf9, 
				0x6b, 0xba, 0xdf, 0x30, 0xfd, 
				0x57, 0xc8, 0xd3, 0x46, 0xfe, 
				0x41, 0xd5, 0xc6, 0x5b, 0xfe, 
				0x2c, 0xe1, 0xb7, 0x6f, 0xfc, 
				0x16, 0xea, 0xa7, 0x83, 0xf8, 
				0x0, 0xf2, 0x95, 0x95, 0xf2, 
				0x16, 0xf8, 0x83, 0xa7, 0xea, 
				0x2c, 0xfc, 0x6f, 0xb7, 0xe1, //This row holds 20. Step DACword 0,1,2,3,4,5 word for channel 0 is acced by DACData[100]
				0x41, 0xfe, 0x5b, 0xc6, 0xd5, 
				0x57, 0xfe, 0x46, 0xd3, 0xc8, 
				0x6b, 0xfd, 0x30, 0xdf, 0xba, 
				0x7f, 0xf9, 0x1a, 0xe8, 0xaa, 
				0x92, 0xf3, 0x4, 0xf1, 0x99, 
				0xa3, 0xec, 0x11, 0xf7, 0x87, 
				0xb4, 0xe3, 0x27, 0xfb, 0x73, 
				0xc3, 0xd8, 0x3d, 0xfe, 0x5f, 
				0xd0, 0xcb, 0x53, 0xfe, 0x4a, 
				0xdc, 0xbd, 0x67, 0xfd, 0x35, //This row holds 30. Step DACword 0,1,2,3,4,5 word for channel 0 is acced by DACData[150]
				0xe7, 0xad, 0x7b, 0xfa, 0x1f, 
				0xef, 0x9c, 0x8e, 0xf5, 0x8, 
				0xf6, 0x8a, 0xa0, 0xee, 0xd, 
				0xfb, 0x77, 0xb1, 0xe5, 0x23, 
				0xfe, 0x63, 0xc0, 0xda, 0x39, 
				0xff, 0x4e, 0xce, 0xce, 0x4e, 
				0xfe, 0x39, 0xda, 0xc0, 0x63, 
				0xfb, 0x23, 0xe5, 0xb1, 0x77, 
				0xf6, 0xd, 0xee, 0xa0, 0x8a, 
				0xef, 0x8, 0xf5, 0x8e, 0x9c, //This row holds 40. Step DACword 0,1,2,3,4,5 word for channel 0 is acced by DACData[200]
				0xe7, 0x1f, 0xfa, 0x7b, 0xad, 
				0xdc, 0x35, 0xfd, 0x67, 0xbd, 
				0xd0, 0x4a, 0xfe, 0x53, 0xcb, 
				0xc3, 0x5f, 0xfe, 0x3d, 0xd8, 
				0xb4, 0x73, 0xfb, 0x27, 0xe3, 
				0xa3, 0x87, 0xf7, 0x11, 0xec, 
				0x92, 0x99, 0xf1, 0x4, 0xf3, 
				0x7f, 0xaa, 0xe8, 0x1a, 0xf9, 
				0x6b, 0xba, 0xdf, 0x30, 0xfd, 
				0x57, 0xc8, 0xd3, 0x46, 0xfe, //This row holds 50. Step DACword 0,1,2,3,4,5 word for channel 0 is acced by DACData[250]
				0x41, 0xd5, 0xc6, 0x5b, 0xfe, 
				0x2c, 0xe1, 0xb7, 0x6f, 0xfc, 
				0x16, 0xea, 0xa7, 0x83, 0xf8, 
				0x0, 0xf2, 0x95, 0x95, 0xf2, 
				0x16, 0xf8, 0x83, 0xa7, 0xea, 
				0x2c, 0xfc, 0x6f, 0xb7, 0xe1, 
				0x41, 0xfe, 0x5b, 0xc6, 0xd5, 
				0x57, 0xfe, 0x46, 0xd3, 0xc8, 
				0x6b, 0xfd, 0x30, 0xdf, 0xba, 
				0x7f, 0xf9, 0x1a, 0xe8, 0xaa, //This row holds 60. Step DACword 0,1,2,3,4,5 word for channel 0 is acced by DACData[300]
				0x92, 0xf3, 0x4, 0xf1, 0x99, 
				0xa3, 0xec, 0x11, 0xf7, 0x87, 
				0xb4, 0xe3, 0x27, 0xfb, 0x73, 
				0xc3, 0xd8, 0x3d, 0xfe, 0x5f, 
				0xd0, 0xcb, 0x53, 0xfe, 0x4a, 
				0xdc, 0xbd, 0x67, 0xfd, 0x35, 
				0xe7, 0xad, 0x7b, 0xfa, 0x1f, 
				0xef, 0x9c, 0x8e, 0xf5, 0x8, 
				0xf6, 0x8a, 0xa0, 0xee, 0xd, 
				0xfb, 0x77, 0xb1, 0xe5, 0x23, //This row holds 70. Step DACword 0,1,2,3,4,5 word for channel 0 is acced by DACData[350]
				0xfe, 0x63, 0xc0, 0xda, 0x39, 
				};

static const uint8_t BridgeWords[3*72] = { 0x0,0xdc,0xde,//This row holds 0. Step BridgeControalWord 0,1,2 first sihftOutWord is acced by BridgeWords[0]
				0x0,0xdc,0xde,
				0x0,0xdc,0xde,
				0x0,0xdc,0xde,
				0x0,0xdc,0xd6,
				0x0,0xdc,0xd6,
				0x0,0xdc,0xd6,
				0x0,0xdc,0xd6,
				0x0,0xdc,0xd6,
				0x0,0xdc,0xd6,
				0x0,0xdc,0xd6,//This row holds 10. Step BridgeControalWord 0,1,2 first sihftOutWord is acced by BridgeWords[30]
				0x0,0xec,0xd6,
				0x0,0xec,0xd6,
				0x0,0xec,0xd6,
				0x0,0xec,0xd6,
				0x0,0xec,0xd6,
				0x0,0xec,0xd6,
				0x0,0xec,0xd6,
				0x0,0xec,0xd6,
				0x0,0xec,0xb6,
				0x0,0xec,0xb6,//This row holds 20. Step BridgeControalWord 0,1,2 first sihftOutWord is acced by BridgeWords[60]
				0x0,0xec,0xb6,
				0x0,0xec,0xb6,
				0x0,0xec,0xb6,
				0x0,0xec,0xb6,
				0x0,0xec,0xb6,
				0x0,0xec,0xb7,
				0x0,0xec,0xb7,
				0x0,0xec,0xb7,
				0x0,0xec,0xb7,
				0x0,0xec,0xb7,//This row holds 30. Step BridgeControalWord 0,1,2 first sihftOutWord is acced by BridgeWords[90]
				0x0,0xec,0xb7,
				0x0,0xec,0xb7,
				0x0,0xea,0xb7,
				0x0,0xea,0xb7,
				0x0,0xea,0xb7,
				0x0,0xea,0xb7,
				0x0,0xea,0xb7,
				0x0,0xea,0xb7,
				0x0,0xea,0xb7,
				0x0,0xea,0xbf,//This row holds 40. Step BridgeControalWord 0,1,2 first sihftOutWord is acced by BridgeWords[120]
				0x0,0xea,0xbf,
				0x0,0xea,0xbf,
				0x0,0xea,0xbf,
				0x0,0xea,0xbf,
				0x0,0xea,0xbf,
				0x0,0xea,0xbf,
				0x0,0xda,0xbf,
				0x0,0xda,0xbf,
				0x0,0xda,0xbf,
				0x0,0xda,0xbf,//This row holds 50. Step BridgeControalWord 0,1,2 first sihftOutWord is acced by BridgeWords[150]
				0x0,0xda,0xbf,
				0x0,0xda,0xbf,
				0x0,0xda,0xbf,
				0x0,0xda,0xbf,
				0x0,0xda,0xdf,
				0x0,0xda,0xdf,
				0x0,0xda,0xdf,
				0x0,0xda,0xdf,
				0x0,0xda,0xdf,
				0x0,0xda,0xdf,//This row holds 60. Step BridgeControalWord 0,1,2 first sihftOutWord is acced by BridgeWords[180]
				0x0,0xda,0xdf,
				0x0,0xda,0xde,
				0x0,0xda,0xde,
				0x0,0xda,0xde,
				0x0,0xda,0xde,
				0x0,0xda,0xde,
				0x0,0xda,0xde,
				0x0,0xda,0xde,
				0x0,0xdc,0xde,
				0x0,0xdc,0xde,//This row holds 70. Step BridgeControalWord 0,1,2 first sihftOutWord is acced by BridgeWords[210]
				0x0,0xdc,0xde,
				};

#endif /* FPSD_MICROSTEPS_H_ */